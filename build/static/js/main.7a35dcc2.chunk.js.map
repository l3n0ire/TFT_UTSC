{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/Layout/Header.js","components/AddTodo.js","components/pages/About.js","App.js","index.js"],"names":["TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","markComplete","this","id","title","style","type","onChange","bind","onClick","delTodo","btnStyle","Component","color","border","borderRadius","cursor","float","Todos","console","log","todos","map","key","linkStyle","headerStyle","textAlign","Header","to","AddTodo","state","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","placeholder","flex","className","About","App","filter","newTodo","uuid","v4","Axios","get","then","res","data","exact","path","render","Fragment","component","ReactDOM","document","getElementById"],"mappings":"kQAGaA,EAAb,2MAEIC,SAAW,WACP,MAAM,CACFC,WAAY,YACZC,QAAS,OACTC,aAAc,kBAGdC,eAAgB,EAAKC,MAAMC,KAAKC,UAChC,eAAiB,SAV7B,EAcIC,aAAe,aAdnB,wEAiBa,MAEiBC,KAAKJ,MAAMC,KAAzBI,EAFH,EAEGA,GAAIC,EAFP,EAEOA,MAGZ,OACI,yBAAKC,MAAQH,KAAKT,YACf,2BACI,2BAAOa,KAAK,WACZC,SAAUL,KAAKJ,MAAMG,aAAaO,KAAKN,KAAKC,KAFhD,IAEwD,IAClDC,EACF,4BAAQK,QAASP,KAAKJ,MAAMY,QAAQF,KAAKN,KAAKC,GAC9CE,MAAQM,GADR,WA5BnB,GAA8BC,aAwCxBD,EAAU,CACZjB,WAAY,MACZmB,MAAO,QACPC,OAAQ,OACRnB,QAAS,UACToB,aAAa,MACbC,OAAO,UACPC,MAAM,SAGKzB,IC5BA0B,E,iLAlBJ,IAAD,OAGR,OAFEC,QAAQC,IAAIlB,KAAKJ,MAAMuB,OAElBnB,KAAKJ,MAAMuB,MAAMC,KAAI,SAACvB,GAAD,OACxB,kBAAC,EAAD,CAAUwB,IAAKxB,EAAKI,GAAIJ,KAAMA,EAC9BE,aAAe,EAAKH,MAAMG,aAC1BS,QAAW,EAAKZ,MAAMY,iB,GARRE,aCUpB,IAAMY,EAAU,CACZX,MAAM,OACNhB,eAAe,QAEb4B,EAAY,CACd/B,WAAW,OACXmB,MAAM,OACNa,UAAU,SACV/B,QAAQ,QAEGgC,EAtBf,WACI,OACI,4BAAQtB,MAAOoB,GACX,wCACA,kBAAC,IAAD,CAAMpB,MAASmB,EAAWI,GAAG,KAA7B,QAFJ,IAII,kBAAC,IAAD,CAAMvB,MAASmB,EAAWI,GAAG,UAA7B,W,QC6BGC,EApCf,2MACIC,MAAM,CACF1B,MAAM,IAFd,EAIIG,SAAW,SAACwB,GAAD,OAAO,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAJhE,EAMIC,SAAU,SAACL,GACPA,EAAEM,iBAEF,EAAKvC,MAAMwC,QAAQ,EAAKR,MAAM1B,OAE9B,EAAK4B,SAAS,CAAE5B,MAAM,MAX9B,wEAcQ,OACI,0BAAMgC,SAAWlC,KAAKkC,SAAU/B,MAAO,CAACkC,QAAQ,SAC5C,2BACAjC,KAAK,OACL4B,KAAK,QACLM,YAAY,WACZnC,MAAO,CAACoC,KAAK,KAAM9C,QAAQ,OAC3BwC,MAAOjC,KAAK4B,MAAM1B,MAClBG,SAAUL,KAAKK,WAEf,2BACID,KAAK,SACL6B,MAAM,SACNO,UAAU,MACVrC,MAAO,CAACoC,KAAK,YA5BjC,GAA6B7B,aCSd+B,MARf,WACI,OACI,kBAAC,WAAD,KACI,uCACA,wD,0CC0EGC,E,2MAnEbd,MAAQ,CACNT,MAAM,I,EASRpB,aAAe,SAACE,GACd,EAAK6B,SAAS,CAACX,MAAO,EAAKS,MAAMT,MAAMC,KAAI,SAAAvB,GAKzC,OAJGA,EAAKI,KAAOA,IAEXJ,EAAKC,WAAaD,EAAKC,WAEpBD,Q,EAKXW,QAAQ,SAACP,GACP,EAAK6B,SAAS,CAACX,MAAM,YAAI,EAAKS,MAAMT,MAAMwB,QAAO,SAAA9C,GAAI,OAAIA,EAAKI,KAAOA,S,EAGvEmC,QAAU,SAAClC,GACT,IAAM0C,EAAS,CAGb3C,GAAI4C,IAAKC,KACT5C,MAAMA,EACNJ,WAAW,GAGb,EAAKgC,SAAS,CAACX,MAAM,GAAD,mBAAM,EAAKS,MAAMT,OAAjB,CAAwByB,O,mFA5B1B,IAAD,OACjBG,IAAMC,IAAI,wDACPC,MAAK,SAAAC,GAAG,OAAI,EAAKpB,SAAS,CAACX,MAAO+B,EAAIC,Y,+BA8BlC,IAAD,OAER,OACE,kBAAC,IAAD,KACA,yBAAKX,UAAU,OACb,yBAAKA,UAAU,aACf,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAA1D,GAAK,OACjC,kBAAC,IAAM2D,SAAP,KACE,kBAAC,EAAD,CAASnB,QAAW,EAAKA,UACvB,qCACA,kBAAC,EAAD,CAAOjB,MAAO,EAAKS,MAAMT,MACzBpB,aAAgB,EAAKA,aACrBS,QAAW,EAAKA,cAKtB,kBAAC,IAAD,CAAO6C,KAAK,SAASG,UAAaf,W,GA1DtB/B,aCTlB+C,IAASH,OAAO,kBAAC,EAAD,MAASI,SAASC,eAAe,W","file":"static/js/main.7a35dcc2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class TodoItem extends Component {\n\n    getStyle = () =>{\n        return{\n            background: '#f4f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            // expression ? is the same as if(expression)\n            // : means else\n            textDecoration: this.props.todo.completed ? \n            'line-through' : 'none'\n        }\n    }\n\n    markComplete = () =>{\n\n    }\n    render() {\n        // pulls out id and title from this.props.todo\n        const { id, title } = this.props.todo;\n        // inorder to modify state we have to go back to the higher level components\n        // one by one using props\n        return (\n            <div style ={this.getStyle()}>\n               <p>\n                   <input type='checkbox' \n                   onChange={this.props.markComplete.bind(this,id)}/> {' '}\n                   { title }\n                   <button onClick={this.props.delTodo.bind(this,id)}\n                   style ={btnStyle}>X</button>\n                </p>\n            </div>\n        )\n    }\n}\n// require the todo object (good practice but not mandatory)\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired\n}\n\nconst btnStyle ={\n    background: \"red\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"5px 9px\",\n    borderRadius:\"50%\",\n    cursor:\"pointer\",\n    float:\"right\"\n}\n\nexport default TodoItem\n","import React, {Component} from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\n\nclass Todos extends Component {\n\n  render(){\n    console.log(this.props.todos)\n  // this is like a for each loop (for each item in the todo array from app.js)\n  return this.props.todos.map((todo) => (\n      <TodoItem key={todo.id} todo={todo} \n      markComplete ={this.props.markComplete}\n      delTodo = {this.props.delTodo}/>\n\n  ));\n  }\n}\n\n// require the todos array (good practice but not mandatory)\n// lowercase p propTypes\nTodos.propTypes = {\n    todos: PropTypes.array.isRequired\n}\n\nexport default Todos;\n","import React from 'react'\nimport {Link} from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n            <h1>todolist</h1>\n            <Link style = {linkStyle} to='/'>Home</Link>\n            |\n            <Link style = {linkStyle} to='/about'>About</Link>\n\n        </header>\n        \n    )\n} \nconst linkStyle={\n    color:'#fff',\n    textDecoration:\"none\"\n}\nconst headerStyle={\n    background:\"#333\",\n    color:'#fff',\n    textAlign:'center',\n    padding:'10px'\n}\nexport default Header\n","import React, { Component } from 'react'\n\nexport class AddTodo extends Component {\n    state={\n        title:''\n    }\n    onChange = (e) => this.setState( {[e.target.name]: e.target.value});\n\n    onSubmit =(e) =>{\n        e.preventDefault();\n        // prop function to pass up to app.js\n        this.props.addTodo(this.state.title);\n        // clear state\n        this.setState({ title:''})\n    }\n    render() {\n        return (\n            <form onSubmit ={this.onSubmit} style={{display:'flex'}}>\n                <input \n                type='text' \n                name='title' \n                placeholder='Add Todo'\n                style={{flex:'10', padding:'5px'}}\n                value={this.state.title}\n                onChange={this.onChange}\n                                    />\n                <input \n                    type='submit' \n                    value='submit' \n                    className='btn'\n                    style={{flex:'1'}}\n                    />\n            </form>\n\n        )\n    }\n}\n\nexport default AddTodo\n","import React from 'react';\nimport {Fragment} from 'react';\n\nfunction About() {\n    return (\n        <Fragment>\n            <h1> About </h1>\n            <p>There is some test here</p>\n        </Fragment>\n    )\n}\nexport default About;\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport Todos from './components/Todos';\nimport Header from './components/Layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport './App.css';\n\nimport Axios from 'axios';\nimport uuid from 'uuid';\n\n\nclass App extends Component {\n  state = {\n    todos:[]\n\n    \n\n  }\n  componentDidMount(){\n    Axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({todos: res.data}))\n  }\n  markComplete = (id) =>{\n    this.setState({todos: this.state.todos.map(todo =>{\n      if(todo.id === id){\n          // sets completed to its opposite value\n          todo.completed = !todo.completed\n      }\n      return todo;\n    })})\n  }\n  // ... copies exisiting array\n  // filter removes todo with id of id from the array\n  delTodo=(id) =>{\n    this.setState({todos:[...this.state.todos.filter(todo => todo.id !== id)]});\n  }\n\n  addTodo = (title)=>{\n    const newTodo ={\n      // packages that generates random ids\n      // we're using version 4\n      id: uuid.v4(),\n      title:title,\n      completed: false\n    }\n\n    this.setState({todos: [...this.state.todos, newTodo]})\n\n  }\n\n  render(){\n    // this is how you add props to a component\n  return (\n    <Router>\n    <div className=\"App\">\n      <div className=\"container\">\n      <Header/>\n\n      <Route exact path=\"/\" render={props => (\n        <React.Fragment>\n          <AddTodo addTodo = {this.addTodo}/>\n            <h1>Todos</h1>\n            <Todos todos={this.state.todos} \n            markComplete = {this.markComplete}\n            delTodo = {this.delTodo}/>\n\n        </React.Fragment>\n      )}/>\n\n      <Route path=\"/about\" component = {About}/>\n\n      \n      </div>\n    </div>\n    </Router>\n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}