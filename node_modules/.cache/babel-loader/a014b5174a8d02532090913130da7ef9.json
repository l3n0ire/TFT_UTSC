{"ast":null,"code":"var _jsxFileName = \"/Users/colinlin/learnReact/my_app/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/Layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport './App.css';\nimport Axios from 'axios';\nimport uuid from 'uuid';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            // sets completed to its opposite value\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.addTodo = title => {\n      const newTodo = {\n        // packages that generates random ids\n        // we're using version 4\n        id: uuid.v4(),\n        title: title,\n        completed: false\n      };\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({\n      todos: res.data\n    }));\n  }\n\n  render() {\n    // this is how you add props to a component\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(AddTodo, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Todos\"), React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/colinlin/learnReact/my_app/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Todos","Header","AddTodo","About","Axios","uuid","App","state","todos","markComplete","id","setState","map","todo","completed","delTodo","filter","addTodo","title","newTodo","v4","componentDidMount","get","then","res","data","render","props"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport Todos from './components/Todos';\nimport Header from './components/Layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport './App.css';\n\nimport Axios from 'axios';\nimport uuid from 'uuid';\n\n\nclass App extends Component {\n  state = {\n    todos:[\n      \n    ]\n\n    \n\n  }\n  componentDidMount(){\n    Axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({todos: res.data}))\n  }\n  markComplete = (id) =>{\n    this.setState({todos: this.state.todos.map(todo =>{\n      if(todo.id === id){\n          // sets completed to its opposite value\n          todo.completed = !todo.completed\n      }\n      return todo;\n    })})\n  }\n  // ... copies exisiting array\n  // filter removes todo with id of id from the array\n  delTodo=(id) =>{\n    this.setState({todos:[...this.state.todos.filter(todo => todo.id !== id)]});\n  }\n\n  addTodo = (title)=>{\n    const newTodo ={\n      // packages that generates random ids\n      // we're using version 4\n      id: uuid.v4(),\n      title:title,\n      completed: false\n    }\n\n    this.setState({todos: [...this.state.todos, newTodo]})\n\n  }\n\n  render(){\n    // this is how you add props to a component\n  return (\n    <Router>\n    <div className=\"App\">\n      <div className=\"container\">\n      <Header/>\n\n      <Route exact path=\"/\" render={props => (\n        <React.Fragment>\n          <AddTodo addTodo = {this.addTodo}/>\n            <h1>Todos</h1>\n            <Todos todos={this.state.todos} \n            markComplete = {this.markComplete}\n            delTodo = {this.delTodo}/>\n\n        </React.Fragment>\n      )}/>\n\n      <Route path=\"/about\" component = {About}/>\n\n      \n      </div>\n    </div>\n    </Router>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}