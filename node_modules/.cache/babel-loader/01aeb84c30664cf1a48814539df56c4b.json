{"ast":null,"code":"var _jsxFileName = \"/Users/colinlin/learnReact/my_app/src/components/TodoItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        // expression ? is the same as if(expression)\n        // : means else\n        textDecoration: this.props.completed ? 'line-through' : 'none'\n      };\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: this.getStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.todo.title));\n  }\n\n} // require the todo object (good practice but not mandatory)\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n};\nexport default TodoItem;","map":{"version":3,"sources":["/Users/colinlin/learnReact/my_app/src/components/TodoItem.js"],"names":["React","Component","PropTypes","TodoItem","getStyle","textDecoration","props","completed","render","todo","title","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAEpCG,QAFoC,GAEzB,MAAK;AACZ,aAAM;AACF;AACA;AACAC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,SAAX,GAChB,cADgB,GACC;AAJf,OAAN;AAMH,KATmC;AAAA;;AAUpCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,KAAK,EAAG,KAAKJ,QAAL,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKE,KAAL,CAAWG,IAAX,CAAgBC,KAApB,CADH,CADJ;AAKH;;AAhBmC,C,CAkBxC;;AACAP,QAAQ,CAACQ,SAAT,GAAqB;AACjBF,EAAAA,IAAI,EAAEP,SAAS,CAACU,MAAV,CAAiBC;AADN,CAArB;AAIA,eAAeV,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class TodoItem extends Component {\n\n    getStyle = () =>{\n        return{\n            // expression ? is the same as if(expression)\n            // : means else\n            textDecoration: this.props.completed ? \n            'line-through' : 'none'\n        }\n    }\n    render() {\n        return (\n            <div style ={this.getStyle()}>\n               <p>{this.props.todo.title}</p>\n            </div>\n        )\n    }\n}\n// require the todo object (good practice but not mandatory)\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired\n}\n\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}