{"ast":null,"code":"var _jsxFileName = \"/Users/colinlin/learnReact/my_app/src/components/TodoItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        background: '#f4f4f4f4',\n        padding: '10px',\n        borderBottom: '1px #ccc dotted',\n        // expression ? is the same as if(expression)\n        // : means else\n        textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n      };\n    };\n\n    this.markComplete = () => {};\n  }\n\n  render() {\n    // pulls out id and title from this.props.todo\n    const _this$props$todo = this.props.todo,\n          id = _this$props$todo.id,\n          title = _this$props$todo.title; // inorder to modify state we have to go back to the higher level components\n    // one by one using props\n\n    return React.createElement(\"div\", {\n      style: this.getStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.props.markComplete.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), \" \", ' ', title, React.createElement(\"button\", {\n      onClick: this.props.delTodo.bind(this, id),\n      style: btnStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"X\")));\n  }\n\n} // require the todo object (good practice but not mandatory)\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n};\nconst btnStyle = {\n  background: \"red\",\n  color: \"white\",\n  border: \"none\",\n  padding: \"5px 9px\",\n  borderRadius: \"50%\",\n  cursor: \"pointer\",\n  float: \"right\"\n};\nexport default TodoItem;","map":{"version":3,"sources":["/Users/colinlin/learnReact/my_app/src/components/TodoItem.js"],"names":["React","Component","PropTypes","TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","markComplete","render","id","title","bind","delTodo","btnStyle","propTypes","object","isRequired","color","border","borderRadius","cursor","float"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAEpCG,QAFoC,GAEzB,MAAK;AACZ,aAAM;AACFC,QAAAA,UAAU,EAAE,WADV;AAEFC,QAAAA,OAAO,EAAE,MAFP;AAGFC,QAAAA,YAAY,EAAE,iBAHZ;AAIF;AACA;AACAC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAChB,cADgB,GACC;AAPf,OAAN;AASH,KAZmC;;AAAA,SAcpCC,YAdoC,GAcrB,MAAK,CAEnB,CAhBmC;AAAA;;AAiBpCC,EAAAA,MAAM,GAAG;AACL;AADK,6BAEiB,KAAKJ,KAAL,CAAWC,IAF5B;AAAA,UAEGI,EAFH,oBAEGA,EAFH;AAAA,UAEOC,KAFP,oBAEOA,KAFP,EAGL;AACA;;AACA,WACI;AAAK,MAAA,KAAK,EAAG,KAAKX,QAAL,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AACA,MAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWG,YAAX,CAAwBI,IAAxB,CAA6B,IAA7B,EAAkCF,EAAlC,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,OAEwD,GAFxD,EAGMC,KAHN,EAII;AAAQ,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWQ,OAAX,CAAmBD,IAAnB,CAAwB,IAAxB,EAA6BF,EAA7B,CAAjB;AACA,MAAA,KAAK,EAAGI,QADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,CADH,CADJ;AAWH;;AAjCmC,C,CAmCxC;;AACAf,QAAQ,CAACgB,SAAT,GAAqB;AACjBT,EAAAA,IAAI,EAAER,SAAS,CAACkB,MAAV,CAAiBC;AADN,CAArB;AAIA,MAAMH,QAAQ,GAAE;AACZb,EAAAA,UAAU,EAAE,KADA;AAEZiB,EAAAA,KAAK,EAAE,OAFK;AAGZC,EAAAA,MAAM,EAAE,MAHI;AAIZjB,EAAAA,OAAO,EAAE,SAJG;AAKZkB,EAAAA,YAAY,EAAC,KALD;AAMZC,EAAAA,MAAM,EAAC,SANK;AAOZC,EAAAA,KAAK,EAAC;AAPM,CAAhB;AAUA,eAAevB,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class TodoItem extends Component {\n\n    getStyle = () =>{\n        return{\n            background: '#f4f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            // expression ? is the same as if(expression)\n            // : means else\n            textDecoration: this.props.todo.completed ? \n            'line-through' : 'none'\n        }\n    }\n\n    markComplete = () =>{\n\n    }\n    render() {\n        // pulls out id and title from this.props.todo\n        const { id, title } = this.props.todo;\n        // inorder to modify state we have to go back to the higher level components\n        // one by one using props\n        return (\n            <div style ={this.getStyle()}>\n               <p>\n                   <input type='checkbox' \n                   onChange={this.props.markComplete.bind(this,id)}/> {' '}\n                   { title }\n                   <button onClick={this.props.delTodo.bind(this,id)}\n                   style ={btnStyle}>X</button>\n                </p>\n            </div>\n        )\n    }\n}\n// require the todo object (good practice but not mandatory)\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired\n}\n\nconst btnStyle ={\n    background: \"red\",\n    color: \"white\",\n    border: \"none\",\n    padding: \"5px 9px\",\n    borderRadius:\"50%\",\n    cursor:\"pointer\",\n    float:\"right\"\n}\n\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}