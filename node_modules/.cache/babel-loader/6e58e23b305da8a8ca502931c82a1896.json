{"ast":null,"code":"var _jsxFileName = \"/Users/colinlin/Documents/GitHub/TFT_UTSC/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Layout/Header';\nimport About from './components/pages/About';\nimport Index from './components/pages/Index';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      color: 'rgba(0,0,0,0)'\n    };\n\n    this.listenScrollEvent = e => {\n      if (window.scrollY > 400) {\n        this.setState({\n          color: 'black'\n        });\n      } else {\n        this.setState({\n          color: 'rgba(0,0,0,0)'\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.title = 'Teamfight UTSC';\n    window.addEventListener('scroll', this.listenScrollEvent);\n  }\n\n  render() {\n    return (\n      /* \n        all styling is in app.css\n        all pages have <Header/> header styling is in header.js\n       */\n      React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Header, {\n        colour: this.state.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/about\",\n        component: About,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/colinlin/Documents/GitHub/TFT_UTSC/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Header","About","Index","App","state","color","listenScrollEvent","e","window","scrollY","setState","componentDidMount","document","title","addEventListener","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA8C,kBAA9C;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;AAGA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BQ,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAC;AADA,KADkB;;AAAA,SAQ1BC,iBAR0B,GAQNC,CAAC,IAAI;AACvB,UAAIC,MAAM,CAACC,OAAP,GAAiB,GAArB,EAA0B;AACxB,aAAKC,QAAL,CAAc;AAACL,UAAAA,KAAK,EAAE;AAAR,SAAd;AACD,OAFD,MAEO;AACL,aAAKK,QAAL,CAAc;AAACL,UAAAA,KAAK,EAAE;AAAR,SAAd;AACD;AACF,KAdyB;AAAA;;AAI1BM,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,KAAT,GAAiB,gBAAjB;AACAL,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkC,KAAKR,iBAAvC;AACD;;AASDS,EAAAA,MAAM,GAAE;AACR;AACE;;;;AAKA,0BAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,KAAKX,KAAL,CAAWC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEH,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAME,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAID,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADA;AANF;AAkBC;;AAnCyB;;AAsC5B,eAAeE,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport Header from './components/Layout/Header';\nimport About from './components/pages/About';\nimport Index from './components/pages/Index'\n\n\nclass App extends Component {\n  state = {\n    color:'rgba(0,0,0,0)'\n  }\n  componentDidMount() {\n    document.title = 'Teamfight UTSC';\n    window.addEventListener('scroll', this.listenScrollEvent)\n  }\n  listenScrollEvent = e => {\n    if (window.scrollY > 400) {\n      this.setState({color: 'black'})\n    } else {\n      this.setState({color: 'rgba(0,0,0,0)'})\n    }\n  }\n\n  render(){\n  return (\n    /* \n      all styling is in app.css\n      all pages have <Header/> header styling is in header.js\n\n    */\n    <Router>\n    <div className=\"App\">\n      <Header colour={this.state.color}/>\n      \n\n      <Route exact path=\"/\" component={Index}/>\n      \n      <Route path=\"/about\" component = {About}/>\n\n    </div>\n    </Router>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}